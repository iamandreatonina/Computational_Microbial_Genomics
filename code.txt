Project Lecture - Prokka code: Genome Annotation:
For each FASTA file, that contains the contigs, we do prokka -> 

conda activate prokka

prokka --help

bunzip2 *bz2

for mag in $(ls *.fn*a);
do
prokka --kingdom Bacteria --outdir SGB15132_prokka_output/${mag//.fn*a} --prefix ${mag} ${mag};
done

for mag in $(ls *.fa);
do
prokka --kingdom Bacteria --outdir SGB15132_prokka_output/${mag//.fa} --prefix ${mag} ${mag};
done

# Annotations:
  --kingdom [X]     Annotation mode: Archaea|Bacteria|Mitochondria|Viruses (default 'Bacteria') -> to have a faster annotation

All the MAGs have been annotated, for each we created several outputs files:
(1) .fna file -> complete nucleotide FASTA file
(2) .faa file -> protein FASTA file -> contains the amminoacids of the encoded proteins -> We have multiples protein ID because from the genome we can translate more than one protein -> ID of the proteins
(3) .tsv file -> table summary -> tab-separated file of all the features of protein_loci -> with a description -> functional annotation
(4) .txt file -> summary containing statistics relating to the annotated features found such as the number of contigs, the number of CDS, the number of rRNA and tRNA and the number of bases.
(5) .gbk file -> standard genome bank file -> we have more info like db_xref (=linking DNA sequence records to other external databases), etc
(6) .gff -> contains both the sequences and their annotations. It can be viewed directly in Artemis or IGV -> most important file -> this is the file we are going to use with roary.

How many CDS (coding sequences) were found in one of your MAGs?
cat ${sample_name}.txt
To look at all the values in all the files -> grep -w 'CDS' */*.txt -> minimum value of CDS is 2651
CDS: protein coding sequence (CDS) region of each gene. CDS is a sequence of nucleotides that corresponds with the sequence of amino acids in a protein

RESULTS:
ChengpingW_2017__AS103raw__bin.22/ChengpingW_2017__AS103raw__bin.22.fa.txt:CDS: 2651
ChengpingW_2017__AS126raw__bin.3/ChengpingW_2017__AS126raw__bin.3.fa.txt:CDS: 3111
ChengpingW_2017__AS71raw__bin.22/ChengpingW_2017__AS71raw__bin.22.fa.txt:CDS: 3136
ChuDM_2017__NCS-037-Stool-infant_microbiome__bin.9/ChuDM_2017__NCS-037-Stool-infant_microbiome__bin.9.fna.txt:CDS: 3272
FengQ_2015__SID531403__bin.23/FengQ_2015__SID531403__bin.23.fa.txt:CDS: 2970
LiJ_2014__V1.CD3-0-PN__bin.12/LiJ_2014__V1.CD3-0-PN__bin.12.fa.txt:CDS: 3093
LiJ_2014__V1.CD37-4__bin.8/LiJ_2014__V1.CD37-4__bin.8.fa.txt:CDS: 3676
LiJ_2014__V1.FI13__bin.53/LiJ_2014__V1.FI13__bin.53.fa.txt:CDS: 3644
LiJ_2014__V1.FI23__bin.8/LiJ_2014__V1.FI23__bin.8.fa.txt:CDS: 3347
LiJ_2017__H1M413822__bin.2/LiJ_2017__H1M413822__bin.2.fa.txt:CDS: 2935
LiJ_2017__H2M414927__bin.27/LiJ_2017__H2M414927__bin.27.fa.txt:CDS: 3045
LiJ_2017__H2M514906__bin.6/LiJ_2017__H2M514906__bin.6.fa.txt:CDS: 3407
LiJ_2017__H2M514930__bin.15/LiJ_2017__H2M514930__bin.15.fa.txt:CDS: 2820
LiJ_2017__H3M419939__bin.30/LiJ_2017__H3M419939__bin.30.fa.txt:CDS: 3354
LiJ_2017__H3M513141__bin.21/LiJ_2017__H3M513141__bin.21.fa.txt:CDS: 3013
LiJ_2017__H3M516909__bin.13/LiJ_2017__H3M516909__bin.13.fa.txt:CDS: 2712
LiuW_2016__SRR3993021__bin.12/LiuW_2016__SRR3993021__bin.12.fa.txt:CDS: 3360
QinN_2014__LD-31__bin.16/QinN_2014__LD-31__bin.16.fa.txt:CDS: 3268
ShaoY_2019__b3f12016-7ae6-11e9-a106-68b59976a384__bin.13/ShaoY_2019__b3f12016-7ae6-11e9-a106-68b59976a384__bin.13.fna.txt:CDS: 3197
ShaoY_2019__bac71bf2-7ae6-11e9-a106-68b59976a384__bin.5/ShaoY_2019__bac71bf2-7ae6-11e9-a106-68b59976a384__bin.5.fna.txt:CDS: 3084
ShaoY_2019__bd927b56-7ae6-11e9-a106-68b59976a384__bin.19/ShaoY_2019__bd927b56-7ae6-11e9-a106-68b59976a384__bin.19.fna.txt:CDS: 3524
ShaoY_2019__e9d50bc0-7ae6-11e9-a106-68b59976a384__bin.3/ShaoY_2019__e9d50bc0-7ae6-11e9-a106-68b59976a384__bin.3.fna.txt:CDS: 3021
ShaoY_2019__SID62cbe612-7ae6-11e9-a106-68b59976a384__bin.1/ShaoY_2019__SID62cbe612-7ae6-11e9-a106-68b59976a384__bin.1.fna.txt:CDS: 3659
ViscontiA_2019__SID590632__bin.32/ViscontiA_2019__SID590632__bin.32.fna.txt:CDS: 3206
ViscontiA_2019__SID729461__bin.8/ViscontiA_2019__SID729461__bin.8.fna.txt:CDS: 3465
VogtmannE_2016__MMRS85438660ST-27-0-0__bin.31/VogtmannE_2016__MMRS85438660ST-27-0-0__bin.31.fa.txt:CDS: 3935
WampachL_2018__V3_C111__bin.11/WampachL_2018__V3_C111__bin.11.fna.txt:CDS: 3216
XieH_2016__YSZC12003_36695__bin.47/XieH_2016__YSZC12003_36695__bin.47.fa.txt:CDS: 3669
XieH_2016__YSZC12003_37283__bin.33/XieH_2016__YSZC12003_37283__bin.33.fa.txt:CDS: 3128
YuJ_2015__SZAXPI003419-6__bin.12/YuJ_2015__SZAXPI003419-6__bin.12.fa.txt:CDS: 2677
YuJ_2015__SZAXPI015232-18__bin.15/YuJ_2015__SZAXPI015232-18__bin.15.fa.txt:CDS: 3252



How many hypothetical proteins?
grep –c hypothetical */*.tsv -> to look at the value for all the different MAGs we have -> minimal value: 1190

RESULTS:
ChengpingW_2017__AS103raw__bin.22/ChengpingW_2017__AS103raw__bin.22.fa.tsv:1190
ChengpingW_2017__AS126raw__bin.3/ChengpingW_2017__AS126raw__bin.3.fa.tsv:1421
ChengpingW_2017__AS71raw__bin.22/ChengpingW_2017__AS71raw__bin.22.fa.tsv:1475
ChuDM_2017__NCS-037-Stool-infant_microbiome__bin.9/ChuDM_2017__NCS-037-Stool-infant_microbiome__bin.9.fna.tsv:1548
FengQ_2015__SID531403__bin.23/FengQ_2015__SID531403__bin.23.fa.tsv:1377
LiJ_2014__V1.CD3-0-PN__bin.12/LiJ_2014__V1.CD3-0-PN__bin.12.fa.tsv:1418
LiJ_2014__V1.CD37-4__bin.8/LiJ_2014__V1.CD37-4__bin.8.fa.tsv:1965
LiJ_2014__V1.FI13__bin.53/LiJ_2014__V1.FI13__bin.53.fa.tsv:1889
LiJ_2014__V1.FI23__bin.8/LiJ_2014__V1.FI23__bin.8.fa.tsv:1664
LiJ_2017__H1M413822__bin.2/LiJ_2017__H1M413822__bin.2.fa.tsv:1388
LiJ_2017__H2M414927__bin.27/LiJ_2017__H2M414927__bin.27.fa.tsv:1435
LiJ_2017__H2M514906__bin.6/LiJ_2017__H2M514906__bin.6.fa.tsv:1694
LiJ_2017__H2M514930__bin.15/LiJ_2017__H2M514930__bin.15.fa.tsv:1252
LiJ_2017__H3M419939__bin.30/LiJ_2017__H3M419939__bin.30.fa.tsv:1665
LiJ_2017__H3M513141__bin.21/LiJ_2017__H3M513141__bin.21.fa.tsv:1394
LiJ_2017__H3M516909__bin.13/LiJ_2017__H3M516909__bin.13.fa.tsv:1193
LiuW_2016__SRR3993021__bin.12/LiuW_2016__SRR3993021__bin.12.fa.tsv:1703
QinN_2014__LD-31__bin.16/QinN_2014__LD-31__bin.16.fa.tsv:1566
ShaoY_2019__b3f12016-7ae6-11e9-a106-68b59976a384__bin.13/ShaoY_2019__b3f12016-7ae6-11e9-a106-68b59976a384__bin.13.fna.tsv:1534
ShaoY_2019__bac71bf2-7ae6-11e9-a106-68b59976a384__bin.5/ShaoY_2019__bac71bf2-7ae6-11e9-a106-68b59976a384__bin.5.fna.tsv:1454
ShaoY_2019__bd927b56-7ae6-11e9-a106-68b59976a384__bin.19/ShaoY_2019__bd927b56-7ae6-11e9-a106-68b59976a384__bin.19.fna.tsv:1830
ShaoY_2019__e9d50bc0-7ae6-11e9-a106-68b59976a384__bin.3/ShaoY_2019__e9d50bc0-7ae6-11e9-a106-68b59976a384__bin.3.fna.tsv:1413
ShaoY_2019__SID62cbe612-7ae6-11e9-a106-68b59976a384__bin.1/ShaoY_2019__SID62cbe612-7ae6-11e9-a106-68b59976a384__bin.1.fna.tsv:1902
ViscontiA_2019__SID590632__bin.32/ViscontiA_2019__SID590632__bin.32.fna.tsv:1549
ViscontiA_2019__SID729461__bin.8/ViscontiA_2019__SID729461__bin.8.fna.tsv:1813
VogtmannE_2016__MMRS85438660ST-27-0-0__bin.31/VogtmannE_2016__MMRS85438660ST-27-0-0__bin.31.fa.tsv:2149
WampachL_2018__V3_C111__bin.11/WampachL_2018__V3_C111__bin.11.fna.tsv:1565
XieH_2016__YSZC12003_36695__bin.47/XieH_2016__YSZC12003_36695__bin.47.fa.tsv:1917
XieH_2016__YSZC12003_37283__bin.33/XieH_2016__YSZC12003_37283__bin.33.fa.tsv:1543
YuJ_2015__SZAXPI003419-6__bin.12/YuJ_2015__SZAXPI003419-6__bin.12.fa.tsv:1200
YuJ_2015__SZAXPI015232-18__bin.15/YuJ_2015__SZAXPI015232-18__bin.15.fa.tsv:1614



How many known proteins?
grep –c –v hypothetical ${sample_name}.tsv
# Annotation: -v, --invert-match -> select non-matching lines -> so here we select the known proteins -> these proteins, since are known are memorized in the data with thei name

-> to look at the total numbers of proteins from a .tsv file, both known and unknown we need the following command: grep -c 'CDS' */*.tsv

RESULTS:
ChengpingW_2017__AS103raw__bin.22/ChengpingW_2017__AS103raw__bin.22.fa.tsv:1502
ChengpingW_2017__AS126raw__bin.3/ChengpingW_2017__AS126raw__bin.3.fa.tsv:1736
ChengpingW_2017__AS71raw__bin.22/ChengpingW_2017__AS71raw__bin.22.fa.tsv:1700
ChuDM_2017__NCS-037-Stool-infant_microbiome__bin.9/ChuDM_2017__NCS-037-Stool-infant_microbiome__bin.9.fna.tsv:1770
FengQ_2015__SID531403__bin.23/FengQ_2015__SID531403__bin.23.fa.tsv:1640
LiJ_2014__V1.CD3-0-PN__bin.12/LiJ_2014__V1.CD3-0-PN__bin.12.fa.tsv:1716
LiJ_2014__V1.CD37-4__bin.8/LiJ_2014__V1.CD37-4__bin.8.fa.tsv:1761
LiJ_2014__V1.FI13__bin.53/LiJ_2014__V1.FI13__bin.53.fa.tsv:1797
LiJ_2014__V1.FI23__bin.8/LiJ_2014__V1.FI23__bin.8.fa.tsv:1724
LiJ_2017__H1M413822__bin.2/LiJ_2017__H1M413822__bin.2.fa.tsv:1576
LiJ_2017__H2M414927__bin.27/LiJ_2017__H2M414927__bin.27.fa.tsv:1630
LiJ_2017__H2M514906__bin.6/LiJ_2017__H2M514906__bin.6.fa.tsv:1746
LiJ_2017__H2M514930__bin.15/LiJ_2017__H2M514930__bin.15.fa.tsv:1604
LiJ_2017__H3M419939__bin.30/LiJ_2017__H3M419939__bin.30.fa.tsv:1722
LiJ_2017__H3M513141__bin.21/LiJ_2017__H3M513141__bin.21.fa.tsv:1658
LiJ_2017__H3M516909__bin.13/LiJ_2017__H3M516909__bin.13.fa.tsv:1548
LiuW_2016__SRR3993021__bin.12/LiuW_2016__SRR3993021__bin.12.fa.tsv:1693
QinN_2014__LD-31__bin.16/QinN_2014__LD-31__bin.16.fa.tsv:1742
ShaoY_2019__b3f12016-7ae6-11e9-a106-68b59976a384__bin.13/ShaoY_2019__b3f12016-7ae6-11e9-a106-68b59976a384__bin.13.fna.tsv:1706
ShaoY_2019__bac71bf2-7ae6-11e9-a106-68b59976a384__bin.5/ShaoY_2019__bac71bf2-7ae6-11e9-a106-68b59976a384__bin.5.fna.tsv:1678
ShaoY_2019__bd927b56-7ae6-11e9-a106-68b59976a384__bin.19/ShaoY_2019__bd927b56-7ae6-11e9-a106-68b59976a384__bin.19.fna.tsv:1744
ShaoY_2019__e9d50bc0-7ae6-11e9-a106-68b59976a384__bin.3/ShaoY_2019__e9d50bc0-7ae6-11e9-a106-68b59976a384__bin.3.fna.tsv:1655
ShaoY_2019__SID62cbe612-7ae6-11e9-a106-68b59976a384__bin.1/ShaoY_2019__SID62cbe612-7ae6-11e9-a106-68b59976a384__bin.1.fna.tsv:1818
ViscontiA_2019__SID590632__bin.32/ViscontiA_2019__SID590632__bin.32.fna.tsv:1705
ViscontiA_2019__SID729461__bin.8/ViscontiA_2019__SID729461__bin.8.fna.tsv:1699
VogtmannE_2016__MMRS85438660ST-27-0-0__bin.31/VogtmannE_2016__MMRS85438660ST-27-0-0__bin.31.fa.tsv:1837
WampachL_2018__V3_C111__bin.11/WampachL_2018__V3_C111__bin.11.fna.tsv:1687
XieH_2016__YSZC12003_36695__bin.47/XieH_2016__YSZC12003_36695__bin.47.fa.tsv:1794
XieH_2016__YSZC12003_37283__bin.33/XieH_2016__YSZC12003_37283__bin.33.fa.tsv:1633
YuJ_2015__SZAXPI003419-6__bin.12/YuJ_2015__SZAXPI003419-6__bin.12.fa.tsv:1520
YuJ_2015__SZAXPI015232-18__bin.15/YuJ_2015__SZAXPI015232-18__bin.15.fa.tsv:1683


Figure: distribution of the completness? Search in the net

EC_number -> in the .tsv file it correspondsto the Enzyme Commission number (EC number) -> a numerical classification scheme for enzymes, based on the chemical reactions they catalyze.


Lecture pangenome analysis:
Pangenome -> union of core genes and accessory gene -> in our case it is the union of all the genome we have

Shell genome -> genes present in >= 2 strains
Cloud genome: genes present in just 1 strains

Close pangenome
Open pangenome -> if we keep adding genomes, we see more acessory function

Roary analyse the pangenome and uses the output of prokka for that.

Plot te output of roary:
The more genomes we add, the pangenome size increase -> we explore more diversity -> we have a bogger diversity -> ergo: open pangenome
If the species live in an open enviroemt in which it can share info with other species -> usually open pangenome.

Commands:
1) Get prokka GFF output and put into a same directory
2) conda activate roary
3) roary -h -> to look at the help. Today we will use it in two ways: with the 
4) mkdirGFF && cd GFF
5) cp ../*/*gff ~/GFF
6) roary *.gff -f roary_out -i 95 -cd 90
-i = percentage identity of blastp -> if we put 99% we are mosre strict and we donot consider the same genes -> we consider different two genes that differs only of one SNP -> the core genome can be more small -> if we put 95% we are less stringet and the core genome can be more expanded. 
-cd = percentage of isolates a gene must be in to be core [default: 99] -> because we are creating the core genes -> everithying that is present in 90% of the MAGs are considered as core genomes -> we can change to 80/85 % and see what happens to the core genomes.
7) cd roary_out
8) cat summary_statistics.txt
9) gene_presence_absence.csv

Plot the outputs of roary: https://github.com/sanger-pathogens/Roary/blob/master/bin/create_pan_genome_plots.R

Extra plotting:
1) curl https://raw.githubusercontent.com/sangerpathogens/Roary/master/contrib/roary_plots/roary_plots.py -o roary_plots.py

The plotting script requires two files that were generated by Roary: accessory_binary_genes.fa.newick, gene_presence_absence.csv

2) python roary_plots.py -h
3) python roary_plots.py accessory_binary_genes.fa.newick gene_presence_absence.csv

INFO SGB:
Samples obtained from body_site stool -> The material in a bowel movement. Stool is made up of undigested food, bacteria, mucus, and cells from the lining of the intestines. Also called feces.

One sample with antibiotic_use yes -> has the cirrhosis

Disease -> RA: Rheumatoid arthritis,
        -> Hypertension,
        -> HBV cirrhosis
        -> one adenoma in fatty liver
        -> one pre-Hypertension
        -> control so healty


NB samples that have a disease (=no control) are from CHN, except one that is AUT (Austria) -> total with disease: 12.
-> to keep in mind when we look at the phylogenic tree -> there could be biases.

The 3 Chenngpingw_2017 are all from the same study -> DOI: 10.1186/s13059-017-1271-6

Patient from AUT -> DOI: 10.26036/CNPhis0000103







